name: Publish Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  publish-release:
    runs-on: ubuntu-latest
    steps:
      # Setup
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
      
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT
      
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      
      - name: Install dependencies
        run: pnpm install

      # Publish
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          commit: 'ci: Version Packages'
          version: pnpm changeset version
          publish: pnpm ci:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          API_URL: ${{ secrets.API_URL }}
          UPLOAD_IMAGE_URL: ${{ secrets.UPLOAD_IMAGE_URL }}

      - name: Add Manual Testing Checklist to Version PR
        if: steps.changesets.outputs.pullRequestNumber != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = ${{ steps.changesets.outputs.pullRequestNumber }};

            // Fetch the current PR
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            // Manual testing checklist
            const checklist = `

            ---

            ## ðŸ§ª Manual UI Testing Checklist

            Before merging this release, please complete the following manual tests in the browser:

            ### ðŸŽ¨ Core Editor Functionality
            - [ ] Open nextjs-demo app and verify editor loads without errors
            - [ ] Type text in editor - verify no lag or infinite loops - verify it saves
            - [ ] Format text (bold, italic, links) - verify formatting applies
            - [ ] Add heading blocks - verify they render correctly
            - [ ] Add button blocks - verify they are draggable and editable
            - [ ] Undo/redo operations work correctly
            - [ ] Editor remains responsive during rapid typing
            - [ ] Email subject field is visible and editable
            - [ ] Add image block - verify upload UI appears. Verify it saves.
            - [ ] Try to upload image from the Editor and them from Sidebar. Veryfy it uploads. Verify Image upload progress shows correctly
            - [ ] Add variables - verify they render as pills. Verify they can be deleted.
            - [ ] Preview email - verify it displays correctly

            ### ðŸ“± Multi-Channel Switching
            - [ ] Switch from Email â†’ SMS - verify content changes
            - [ ] Type in SMS editor - verify character count updates
            - [ ] Switch from SMS â†’ Push - verify push editor loads
            - [ ] Switch from Push â†’ Inbox - verify inbox editor loads
            - [ ] Switch back to Email - verify original email content is preserved
            - [ ] Rapid switching (Emailâ†’SMSâ†’Emailâ†’SMS) doesn't cause crashes

            ### ðŸ”„ Template Switching Tests
            - [ ] **Initial load**: Select Template A from dropdown - verify content loads correctly
            - [ ] **Switch Aâ†’B**: Select Template B - verify content updates to Template B
            - [ ] **Switch Bâ†’A**: Select Template A again - verify Template A content is restored (not Template B)
            - [ ] Subject field updates correctly when switching templates
            - [ ] Email body content updates correctly when switching templates
            - [ ] SMS content updates correctly when switching templates
            - [ ] **No infinite loops** during template switching
            - [ ] Rapid template switching (Aâ†’Bâ†’Aâ†’Bâ†’A) doesn't crash

            ### ðŸ‘¥ Multiple Provider Instances
            - [ ] Open page with 2+ TemplateProvider instances side-by-side
            - [ ] Type in Editor 1 - verify Editor 2 content doesn't change
            - [ ] Type in Editor 2 - verify Editor 1 content doesn't change
            - [ ] Each editor maintains independent state
            - [ ] Auto-save fires independently for each editor
            - [ ] No state collision between instances

            ### ðŸ”§ Additional rounds of testing
            - [ ] Run tests with all props passed to TemplateProvider
            - [ ] Run tests with all props passed to TemplateEditor

            ---

            ðŸš€ **Once all UI tests pass, this release is ready to publish!**

            > **Note**: Automated tests (unit + E2E) must pass before manual testing. This checklist focuses on UI/UX validation that automated tests cannot fully cover.
            `;

            // Update the PR body
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              body: pr.body + checklist
            });