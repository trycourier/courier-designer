name: Check Pull Request
on:
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  unit-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install dependencies
        run: pnpm install
      - name: Run tests
        run: pnpm --filter @trycourier/react-designer test

  e2e-test:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Setup test environment
        run: |
          cd apps/editor-dev
          cp .env.test .env
          echo "✅ Test environment configured - .env created from .env.test"
          echo "Contents of .env:"
          cat .env
      - name: Install dependencies
        run: pnpm install
      - name: Get Playwright version
        id: playwright-version
        run: echo "version=$(cd packages/react-designer && node -p "require('@playwright/test/package.json').version")" >> $GITHUB_OUTPUT
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}
      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: cd packages/react-designer && npx playwright install chromium --with-deps
      - name: Install Playwright system dependencies
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: cd packages/react-designer && npx playwright install-deps chromium
      - name: Build packages
        run: pnpm --filter @trycourier/react-designer build
      - name: Verify .env exists before tests
        run: |
          echo "Checking if .env exists in apps/editor-dev:"
          ls -la apps/editor-dev/.env || echo ".env NOT FOUND!"
          if [ -f apps/editor-dev/.env ]; then
            echo "✅ .env file exists"
            echo "Contents:"
            cat apps/editor-dev/.env
          else
            echo "❌ .env file does NOT exist!"
            exit 1
          fi
      - name: Run e2e tests
        env:
          VITE_API_URL: "https://api.courier.com/client/q"
          VITE_TEMPLATE_ID: "test-template"
          VITE_TENANT_ID: "test-tenant"
          VITE_JWT_TOKEN: "test-token"
        run: cd packages/react-designer && pnpm test:e2e
      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: packages/react-designer/playwright-report/
          retention-days: 7 